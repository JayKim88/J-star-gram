{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/message.js","comps/Chatroom.js","comps/Modal.js","googlelogo.png","App.js","reportWebVitals.js","index.js"],"names":["Main","styled","div","Header","Logo","h1","Title","className","dotenv","config","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","projectAuth","auth","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","Progress","motion","props","ProgressBar","setFile","initial","width","animate","Label","label","InputImg","input","Output","UploadForm","user","type","htmlFor","id","onChange","e","image","target","files","includes","setTimeout","useFiretore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","ImageBox","ImageWrap","Image","img","ImageGrid","setSelectedImg","map","layout","onClick","src","alt","opacity","transition","delay","Img","FirstWrap","SecondWrap","DisplayName","p","DateToday","span","Text","Message","text","displayName","uid","photoURL","height","seconds","formatRelative","Date","Ulbox","ul","SubmitBox","form","Input","Button","button","invisible","Chatroom","selectedImgId","messages","setMessages","newMessage","setNewMessage","db","limit","ulObj","document","getElementById","scrollTop","scrollHeight","filter","ele","imgId","length","lastTen","slice","y","style","listStyle","paddingLeft","message","onSubmit","preventDefault","value","placeholder","disabled","Backdrop","MainImg","Modal","selectedImg","classList","contains","ScrollTopBtn","SignWrap","SignIn","SignOut","App","currentUser","setUser","initializing","setInitializing","signInWithGoogle","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","console","log","signOut","onAuthStateChanged","window","onscroll","topBtn","body","documentElement","display","visibility","scrollFunction","googlelogo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7811e92c.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = () => {\n  return (\n    <Main className=\"title\">\n      <Header>\n        <Logo>JStargram</Logo>\n      </Header>\n      <h2>Share your pictures</h2>\n      <p>Share, Talk and Enjoy together 😃</p>\n    </Main>\n  );\n};\n\nconst Main = styled.div`\n  /* border: 3px solid red; */\n  display: flex;\n  flex-direction: column;\n  h2 {\n    font-style: italic;\n    font-size: 2rem;\n  }\n`;\nconst Header = styled.div`\n  /* border: 3px solid red; */\n  display: flex;\n  @media only screen and (max-width: 500px) {\n    height: 4rem;\n  }\n`;\nconst Logo = styled.h1`\n  /* border: 3px solid blue; */\n  /* position: absolute; */\n  left: 3rem;\n  text-align: left;\n  font-size: 1.5rem;\n  color: #ff8000;\n  @media only screen and (max-width: 500px) {\n    position: absolute;\n    left: 1rem;\n  }\n`;\n\nexport default Title;\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\"; //store images\nimport \"firebase/firestore\"; //database\nimport \"firebase/auth\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGESENDER,\n  appId: process.env.REACT_APP_APPID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\nconst projectStorage = firebase.storage(); //This reference points to the root of Cloud Storage bucket.\nconst projectFirestore = firebase.firestore();\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\nconst projectAuth = firebase.auth();\n\nexport { projectStorage, projectFirestore, timeStamp, projectAuth };\n","import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timeStamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    //references : if images is uploaded in default storage, file.name should be used as a name\n    const storageRef = projectStorage.ref(file.name);\n    //collection is a container of documents\n    //document is a unit of storage. It includes key-value objects\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timeStamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n  //useEffect callback will be fired if file dependency is changed\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { url, progress } = useStorage(file);\n  //useStorage(file) returns { progress, url, error };\n  // console.log(progress, url);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <Progress\n      percentage={progress}\n      initial={{ width: 0 }}\n      animate={{ width: progress + \"%\" }}\n    >\n      a\n    </Progress>\n  );\n};\n\nconst Progress = styled(motion.div)`\n  width: ${(props) => props.percentage + \"%\"};\n  background: black;\n  color: transparent;\n`;\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\n// import useStorage from \"../hooks/useStorage.js\";\nimport ProgressBar from \"./ProgressBar\";\nimport styled from \"styled-components\";\n\nconst UploadForm = ({ user }) => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const type = [\"image/jpeg\", \"image/png\"];\n\n  const handleImage = (e) => {\n    let image = e.target.files[0];\n    // console.log(image);\n    if (user && image && type.includes(image.type)) {\n      setFile(image);\n      setError(null);\n    } else {\n      if (user === null) {\n        // console.log(\"no login!\");\n        setError(\"Please Login : )\");\n      } else {\n        // console.log(\"wrong picture@@\");\n        setError(\"Please select an image file( jpeg or png )\");\n      }\n      setFile(null);\n      setTimeout(() => {\n        // const errMsg = document.getElementById(\"error\");\n        // errMsg.style.visibility = \"hidden\";\n        // errMsg.style.opacity = 0;\n        setError(null);\n      }, 2000);\n    }\n  };\n\n  return (\n    <form>\n      <Label htmlFor=\"file-upload\">+</Label>\n      <InputImg id=\"file-upload\" type=\"file\" onChange={handleImage} />\n      <Output className=\"output\">\n        {error && <div id=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </Output>\n    </form>\n  );\n};\n\nconst Label = styled.label`\n  border: 1px solid transparent;\n  border-radius: 20px;\n  display: inline-block;\n  margin-top: 2rem;\n  padding: 6px 12px;\n  cursor: pointer;\n  font-size: 20px;\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.5);\n  :hover {\n    background: black;\n    color: white;\n  }\n`;\nconst InputImg = styled.input`\n  display: none;\n  /* width: 120px; */\n  border: 3px solid black;\n  border-radius: 20px;\n`;\nconst Output = styled.div`\n  /* border: 3px solid black; */\n  margin-top: 2rem;\n  height: 1.5rem;\n  #error {\n    /* border: 3px solid red; */\n    display: block;\n    visibility: 1;\n    transition: all 2s;\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #ff6e30;\n  }\n`;\n\nexport default UploadForm;\n","import { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFiretore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection) //collection will be 'images'\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        //snapshot including all of documents in collection of\n        //database when there is change in collection.\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n          //doc.data(): all data of a document\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n  return { docs };\n};\n\nexport default useFiretore;\n","import React from \"react\";\nimport useFiretore from \"../hooks/useFirestore\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFiretore(\"images\");\n  // console.log(docs);\n  return (\n    <ImageBox>\n      {docs &&\n        docs.map((doc) => (\n          <ImageWrap\n            layout\n            className=\"img-wrap\"\n            key={doc.id}\n            onClick={() => setSelectedImg(doc)}\n          >\n            <Image\n              src={doc.url}\n              alt=\"uploaded pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </ImageWrap>\n        ))}\n    </ImageBox>\n  );\n};\n\nconst ImageBox = styled.div`\n  /* border: 3px solid red; */\n  margin: 50px auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 40px;\n  @media only screen and (max-width: 1000px) {\n    grid-template-columns: 1fr 1fr;\n    /* transition: grid-template-columns 0.2s ease-in; */\n  }\n  @media only screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n    /* transition: grid-template-columns 0.2s ease-in; */\n  }\n`;\nconst ImageWrap = styled(motion.div)`\n  /* border: 3px solid blue; */\n  overflow: hidden;\n  height: 0;\n  padding: 50% 0;\n  position: relative;\n  opacity: 0.8;\n  cursor: pointer;\n  :hover {\n    /* box-shadow: 2px 3px 1px 2px rgba(0, 0, 0, 0.8); */\n    opacity: 1;\n    transition: opacity 0.2s ease-in;\n  }\n`;\nconst Image = styled(motion.img)`\n  min-width: 100%;\n  min-height: 100%;\n  max-width: 150%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport default ImageGrid;\n","import React from \"react\";\nimport { formatRelative } from \"date-fns\";\nimport styled from \"styled-components\";\n\nconst Message = ({ user, text, createdAt }) => {\n  const { uid, displayName, photoURL } = user;\n  return (\n    <Main>\n      {photoURL ? (\n        <Img src={photoURL} alt=\"Avatar\" width={45} height={45}></Img>\n      ) : null}\n      <FirstWrap>\n        <SecondWrap>\n          {displayName ? <DisplayName>{displayName}</DisplayName> : null}\n          {createdAt?.seconds ? (\n            <DateToday>\n              {formatRelative(new Date(createdAt.seconds * 1000), new Date())}\n            </DateToday>\n          ) : null}\n        </SecondWrap>\n        <Text>{text}</Text>\n      </FirstWrap>\n    </Main>\n  );\n};\n\nconst Main = styled.div`\n  /* border: 3px solid red; */\n  display: flex;\n  align-items: center;\n  padding: 0.2rem 0.5rem 0.2rem 0.5rem;\n  margin-bottom: 0.5rem;\n  word-break: break-all;\n`;\nconst Img = styled.img`\n  /* border: 3px solid blue; */\n  border-radius: 1.5rem;\n`;\nconst FirstWrap = styled.div`\n  /* border: 3px solid black; */\n  border-radius: 1rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n  margin: 0.5rem;\n  background-color: #ffb442;\n`;\nconst SecondWrap = styled.div`\n  /* border: 3px solid purple; */\n  height: 0.5rem;\n  margin-bottom: 0.4rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 0.7rem;\n`;\nconst DisplayName = styled.p`\n  /* border: 3px solid yellow; */\n  margin-left: 0.2rem;\n  color: black;\n`;\nconst DateToday = styled.span`\n  /* border: 3px solid green; */\n  margin-left: 0.5rem;\n  font-size: 0.6rem;\n  color: gray;\n`;\nconst Text = styled.p`\n  /* border: 3px solid black; */\n  text-align: left;\n  margin: 0;\n  margin-left: 0.2rem;\n  font-size: 0.8rem;\n`;\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport { timeStamp } from \"../firebase/config\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport Message from \"./message\";\nimport firebase from \"firebase/app\";\n\nconst Chatroom = ({ user = null, selectedImgId = null }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { uid, displayName, photoURL } = user;\n  const db = firebase.firestore();\n  // console.log(selectedImgId);\n  useEffect(() => {\n    if (db) {\n      // console.log(\"why not working\"); //여기에선 콘솔로그가 안찍힌다!!!\n      const unsub = db\n        .collection(\"messages\")\n        // .where(\"imgId\", \"==\", selectedImgId)\n        .orderBy(\"createdAt\")\n        .limit(100)\n        .onSnapshot((snap) => {\n          //show recent message\n          const ulObj = document.getElementById(\"ulbox\");\n          ulObj.scrollTop = ulObj.scrollHeight;\n          const data = snap.docs\n            .map((doc) => ({ ...doc.data(), id: doc.id })) //Each child in a list should have a unique \"key\" prop.\n            .filter((ele) => {\n              return ele.imgId === selectedImgId; //extract messages for the selectedImg\n            });\n          if (data.length <= 10) {\n            setMessages(data);\n          } else {\n            const lastTen = data.slice(data.length - 10, data.length);\n            // console.log(lastTen);\n            setMessages(lastTen);\n          }\n        });\n\n      return unsub;\n    }\n  }, [db, selectedImgId]);\n\n  const handleOnChange = (e) => {\n    setNewMessage(e.target.value);\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (db) {\n      //make specific collection for each pircture!!\n      db.collection(\"messages\").add({\n        text: newMessage,\n        createdAt: timeStamp(),\n        uid,\n        displayName,\n        photoURL,\n        imgId: selectedImgId,\n      });\n    }\n    setNewMessage(\"\");\n    // const inputBox = document.getElementById(\"inputBox\");\n    // inputBox.focus();\n  };\n\n  return (\n    <Main initial={{ y: \"-100vh\" }} animate={{ y: 0 }}>\n      <Header>Let's talk about picture 📸</Header>\n      <Ulbox id=\"ulbox\" style={{ listStyle: \"none\", paddingLeft: \"0px\" }}>\n        {messages.map((message) => (\n          <li id=\"libox\" key={message.id}>\n            <Message\n              user={message}\n              text={message.text}\n              createdAt={message.createdAt}\n            />\n          </li>\n        ))}\n      </Ulbox>\n      <SubmitBox onSubmit={handleOnSubmit}>\n        <Input\n          id=\"inputBox\"\n          type=\"text\"\n          value={newMessage}\n          onChange={handleOnChange}\n          placeholder=\"Type your message\"\n        />\n        <Button type=\"submit\" disabled={!newMessage} invisible={!newMessage}>\n          ⇧\n        </Button>\n      </SubmitBox>\n    </Main>\n  );\n};\n\nconst Main = styled(motion.div)`\n  /* border: 3px solid red; */\n  width: 20rem;\n  margin: 10rem 0 10rem 0rem;\n  background: white;\n  box-shadow: 3px 5px 7px rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  @media only screen and (max-width: 1000px) {\n    width: 20rem;\n    height: 20.4rem;\n    /* transition: grid-template-columns 0.2s ease-in; */\n  }\n  @media only screen and (max-width: 700px) {\n    margin: 0;\n    width: 18.4rem;\n    height: 18rem;\n  }\n`;\nconst Header = styled.div`\n  /* border: 3px solid blue; */\n  height: 10%;\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  box-shadow: 3px 5px 7px rgba(0, 0, 0, 0.2);\n  font-size: 1.2rem;\n  /* font-weight: bold; */\n`;\nconst Ulbox = styled.ul`\n  /* border: 3px solid red; */\n  height: 79%;\n  overflow-y: auto;\n  margin: 0;\n  padding-left: 1rem;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst SubmitBox = styled.form`\n  /* position: fixed; */\n  /* border: 3px solid red; */\n  height: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media only screen and (max-width: 1000px) {\n    height: 15%;\n    /* transition: grid-template-columns 0.2s ease-in; */\n  }\n`;\nconst Input = styled.input`\n  border: 1px solid transparent;\n  border-radius: 2rem;\n  font-size: 1rem;\n  white-space: normal;\n  width: 80%;\n  height: 2rem;\n  margin-left: 0.7rem;\n  margin-right: 0.7rem;\n  padding-left: 1rem;\n  padding-right: 2.5rem;\n  outline: none;\n  :focus {\n    box-shadow: 3px 5px 7px rgba(0, 0, 0, 0.2);\n    transition: box-shadow 0.5s ease-in;\n  }\n`;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: ${(props) => (props.invisible === true ? 0 : 1)};\n  position: absolute;\n  right: 1.1rem;\n  border: 1px solid transparent;\n  border-radius: 3rem;\n  width: 2rem;\n  height: 2rem;\n  word-break: break-all;\n  font-size: 1.7rem;\n  font-stretch: ultra-expanded;\n  outline: none;\n  background: orange;\n  color: white;\n  cursor: ${(props) => (props.invisible === true ? \"auto\" : \"pointer\")};\n  transition: opacity 1s;\n`;\nexport default Chatroom;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport Chatroom from \"./Chatroom\";\n\nconst Modal = ({ selectedImg, setSelectedImg, user }) => {\n  const handleClick = (e) => {\n    // console.log(e.target.classList);\n    if (e.target.classList.contains(\"backdrop\")) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <Backdrop\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      // transition={{ duration: 1 }}\n    >\n      <MainImg\n        src={selectedImg.url}\n        alt=\"enlarged img\"\n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n      {user ? <Chatroom user={user} selectedImgId={selectedImg.id} /> : null}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(motion.div)`\n  /* border: 3px solid yellow; */\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  @media only screen and (max-width: 700px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst MainImg = styled(motion.img)`\n  display: block;\n  width: 35rem;\n  /* max-width: 60%;\n  max-height: 100%; */\n  margin: 10rem 0 10rem 0;\n  box-shadow: 3px 5px 7px rgba(0, 0, 0, 0.5);\n  border: 3px solid white;\n  @media only screen and (max-width: 1000px) {\n    width: 20rem;\n    height: 20rem;\n    /* transition: grid-template-columns 0.2s ease-in; */\n  }\n  @media only screen and (max-width: 700px) {\n    margin: 0;\n    width: 18rem;\n    height: 17rem;\n  }\n`;\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/googlelogo.0d5c1475.png\";","import Title from \"./comps/Title.js\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport styled from \"styled-components\";\nimport Modal from \"./comps/Modal\";\nimport { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\n// import \"firebase/firestore\"; //database\nimport { projectAuth } from \"./firebase/config\";\nimport googlelogo from \"./googlelogo.png\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  const auth = projectAuth;\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [initializing, setInitializing] = useState(true);\n\n  const signInWithGoogle = async () => {\n    //Retrieve Google provider object\n    const provider = new firebase.auth.GoogleAuthProvider();\n    //Set language to the default browser preference\n    auth.useDeviceLanguage();\n    //start signin process\n    try {\n      await auth.signInWithPopup(provider);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    //this detects the change on state of user login\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    //cleanup subscription(the state of login of user to logout)\n    return unsubscribe;\n  }, [initializing, auth]);\n  //useEffect is on the process\n  if (initializing) return \"Loading...\";\n\n  //Get the button\n\n  // When the user scrolls down 20px from the top of the document, show the button\n  window.onscroll = () => {\n    scrollFunction();\n  };\n\n  function scrollFunction() {\n    const topBtn = document.getElementById(\"topBtn\");\n    if (\n      document.body.scrollTop > 20 ||\n      document.documentElement.scrollTop > 20\n    ) {\n      topBtn.style.display = \"block\";\n      topBtn.style.visibility = \"visible\";\n      topBtn.style.opacity = 1;\n      topBtn.style.transition = \"all 2s\";\n    } else {\n      topBtn.style.visibility = \"hidden\";\n      topBtn.style.opacity = 0;\n    }\n  }\n\n  // When the user clicks on the button, scroll to the top of the document\n  function topFunction() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  return (\n    <Main className=\"App\">\n      <SignWrap>\n        {user ? (\n          <>\n            <div className=\"logIn\">\n              Welcome Here <br></br>Join the chat : )\n            </div>\n            <SignOut onClick={signOut}>Out</SignOut>\n          </>\n        ) : (\n          <>\n            <div className=\"logIn\">\n              Join chats <br></br>By logging in : )\n            </div>\n            <SignIn onClick={signInWithGoogle}>\n              <img src={googlelogo} alt=\"googlelogo\" />\n            </SignIn>\n          </>\n        )}\n      </SignWrap>\n      <ScrollTopBtn id=\"topBtn\" onClick={topFunction}>\n        Top\n      </ScrollTopBtn>\n      <Title />\n      <UploadForm user={user} />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <>\n          <Modal\n            selectedImg={selectedImg}\n            setSelectedImg={setSelectedImg}\n            user={user}\n          />\n        </>\n      )}\n    </Main>\n  );\n}\n\nconst Main = styled.div`\n  /* border: 3px solid red; */\n  text-align: center;\n  padding: 1vw 15vw;\n  /* min-width: 375px; */\n`;\n\nconst ScrollTopBtn = styled.button`\n  border: 3px solid red;\n  display: none;\n  position: fixed;\n  bottom: 15px;\n  right: 20px;\n  z-index: 99;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: #f37f2d;\n  color: white;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 4px;\n  transition: display 2s;\n  @media only screen and (max-width: 500px) {\n    right: 7px;\n  }\n`;\nconst SignWrap = styled.div`\n  /* border: 3px solid yellow; */\n  /* width: 100%; */\n  position: absolute;\n  top: 1.5rem;\n  right: 10px;\n  display: flex;\n  justify-content: flex-end;\n  .logIn {\n    line-height: 1.3rem;\n    @media only screen and (max-width: 500px) {\n      display: none;\n    }\n  }\n`;\nconst SignIn = styled.button`\n  border: 3px solid green;\n  /* z-index: 99; */\n  font-size: 1rem;\n  font-weight: bold;\n  border: none;\n  border-radius: 1.3rem;\n  width: 2.5rem;\n  height: 2.5rem;\n  outline: none;\n  background-color: white;\n  color: white;\n  cursor: pointer;\n  margin-left: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.5);\n  :active {\n    transform: translateY(2px);\n    box-shadow: none;\n  }\n  img {\n    /* border: 3px solid red; */\n    width: 120%;\n  }\n`;\nconst SignOut = styled.button`\n  border: 3px solid green;\n  /* z-index: 99; */\n  font-size: 1rem;\n  font-weight: bold;\n  border: none;\n  border-radius: 2rem;\n  width: 2.5rem;\n  height: 2.5rem;\n  outline: none;\n  background-color: white;\n  color: black;\n  cursor: pointer;\n  /* padding: 10px; */\n  margin-left: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.5);\n  :active {\n    transform: translateY(2px);\n    box-shadow: none;\n  }\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}